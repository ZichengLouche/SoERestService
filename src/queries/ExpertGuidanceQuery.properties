#SQL_GETCLIENTOPPORTUNITIES=SELECT coll.CID, coll.OID, coll.CNM, coll.ONM, coll.ODP, coll.LU, coll.LastUpdated, IF(max(coll.U) IS NULL, '0', max(coll.U)) AS U, IF(max(coll.E) IS NULL, '0', max(coll.E)) AS E, IF(max(coll.D) IS NULL, '0', max(coll.D)) AS D, IF(max(coll.I) IS NULL, '0', max(coll.I)) AS I, IF(max(coll.CV) IS NULL, '0', max(coll.CV)) AS CV FROM(SELECT clients.idKey AS CID, opp.idKey AS OID, clients.Name AS CNM, opp.oppName AS ONM, opp.Description AS ODP, opp.last_Updated AS LastUpdated, UCASE(DATE_FORMAT(opp.last_Updated, "%e%b%Y")) AS LU, state.idItem AS IdItem, state.viaCheckBox AS viaCheckBox, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 5 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 5 AND state.viaCheckBox = 1 THEN 2 END U, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 6 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 6 AND state.viaCheckBox = 1 THEN 2 END E, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 7 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 7 AND state.viaCheckBox = 1 THEN 2 END D, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 8 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 8 AND state.viaCheckBox = 1 THEN 2 END I, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 9 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 9 AND state.viaCheckBox = 1 THEN 2 END CV FROM {0}.teamsd_opp opp LEFT JOIN {0}.teamsdclients clients ON opp.idClient = clients.idKey LEFT JOIN {0}.teamsdstate state ON state.oppID = opp.idKey AND state.Category = 1 WHERE opp.active = 1 AND opp.uid = ?) coll GROUP BY coll.OID ORDER BY coll.LastUpdated DESC
SQL_NEW_CLIENT=INSERT INTO {0}.TEAMSDCLIENTS(UID, NAME, DESCRIPTION, BYWHOM, last_Updated, createDate, client_identifier, location) VALUES(?,?,?,?,now(),now(),?,?)
SQL_NEW_CLIENT_OPP=INSERT INTO {0}.TEAMSD_OPP(UID, IDCLIENT, IDSALESCONNECT, OPPNAME, DESCRIPTION, BYWHOM, last_Updated, startDate) VALUE(?,?,?,?,?,?,now(),?)
SQL_NEW_GET_CLIENTOPP=SELECT CLIENTS.IDKEY AS CID, OPP.IDKEY AS OID, CLIENTS.NAME AS CNM, CLIENTS.client_identifier AS CIDENTIFIER, CLIENTS.location AS LOCATION, OPP.OPPNAME AS ONM, OPP.Description AS ODP, UCASE(DATE_FORMAT(OPP.LAST_UPDATED, "%e%b%Y")) AS LU, '0' AS U,'0' AS E,'0' AS D,'0' AS I,'0' AS CV FROM {0}.TEAMSDCLIENTS CLIENTS LEFT JOIN {0}.TEAMSD_OPP OPP ON CLIENTS.IDKEY = OPP.IDCLIENT WHERE OPP.IDKEY = ?
SQL_EDIT_GET_CLIENTOPP=SELECT CLIENTS.IDKEY AS CID, OPP.IDKEY AS OID, CLIENTS.NAME AS CNM, CLIENTS.client_identifier AS clientIdentifier, CLIENTS.location AS location, CLIENTS.DESCRIPTION AS CNN, OPP.IDSALESCONNECT AS OPPID, OPP.OPPNAME AS OPPDESP, OPP.DESCRIPTION AS OPPCMT FROM {0}.TEAMSDCLIENTS CLIENTS LEFT JOIN {0}.TEAMSD_OPP OPP ON CLIENTS.IDKEY = OPP.IDCLIENT WHERE OPP.IDKEY = ?
SQL_GET_CLIENTNAMES=SELECT distinct CLIENTS.IDKEY AS CID, CLIENTS.NAME AS CNM, 1 as SHR FROM {0}.TEAMSDCLIENTS CLIENTS LEFT JOIN {0}.TEAMSD_OPP OPP ON CLIENTS.IDKEY = OPP.IDCLIENT WHERE CLIENTS.UID = ? and (OPP.active = 1 or OPP.active = 3) union all SELECT distinct CLIENTS.IDKEY AS CID, CLIENTS.NAME AS CNM, 2 as SHR FROM {0}.TEAMSDCLIENTS CLIENTS LEFT JOIN {0}.TEAMSD_OPP OPP ON CLIENTS.IDKEY = OPP.IDCLIENT and (OPP.active = 1 or OPP.active = 3) inner join {0}.teamsd_opp_share share on OPP.idKey=share.oppId and share.shared_with=? ORDER BY CNM ASC
SQL_GET_USER_CLIENTNAMES=SELECT distinct CLIENTS.IDKEY AS CID, CLIENTS.NAME AS CNM FROM {0}.TEAMSDCLIENTS CLIENTS LEFT JOIN {0}.TEAMSD_OPP OPP ON CLIENTS.IDKEY = OPP.IDCLIENT WHERE CLIENTS.UID = ? and (OPP.active = 1 or OPP.active = 3) ORDER BY CNM ASC

SQL_EDIT_CLIENT=UPDATE {0}.TEAMSDCLIENTS SET NAME=?, DESCRIPTION=?, last_Updated=now(), client_identifier=?, location=? WHERE idKey = ?
SQL_EDIT_CLIENT_OPP=UPDATE {0}.TEAMSD_OPP SET idSalesConnect=?, oppName=?, Description=?, last_Updated=now() WHERE idKey = ?
SQL_EDIT_OPP_DT=UPDATE {0}.TEAMSD_OPP SET last_Updated=now() WHERE idKey = ?

#UPDATE SQL FOR SHARE OPPS
SQL_GET_ACTIVITIES=SELECT activity.idKey AS AID, activity_stat.oppID AS OID, activity.Name AS ANM, activity.Purpose AS APP, activity.contentURL AS AURL, "" AS ADP, UCASE(DATE_FORMAT(activity_stat.startDate, "%e%b%Y")) AS ASD, UCASE(DATE_FORMAT(activity_stat.last_Updated, "%e%b%Y")) AS ALU, activity_stat.idKey AS SID, CASE WHEN activity_stat.idKey IS NULL THEN 0 WHEN activity_stat.idKey IS NOT NULL AND activity_stat.viaCheckBox = 0 THEN 1 WHEN activity_stat.idKey IS NOT NULL AND activity_stat.viaCheckBox = 1 THEN 2 END CHECKED FROM (SELECT * FROM {0}.methodcontent WHERE idParent != 0 AND idMethod = 1) activity LEFT JOIN (SELECT * FROM {0}.teamsdstate WHERE Category = 1 AND oppId = ?) activity_stat ON activity.idKey = activity_stat.idItem
SQL_GET_TASKS=SELECT task.idKey AS TID, task_stat.oppID AS OID, task.idParent AS PID, task.Name AS TNM, task.URL AS TURL, "" AS TDP, task_stat.idKey AS SID, CASE WHEN task_stat.idKey IS NULL THEN 0 WHEN task_stat.idKey IS NOT NULL AND task_stat.viaCheckBox = 0 THEN 1 WHEN task_stat.idKey IS NOT NULL AND task_stat.viaCheckBox = 1 THEN 2 END CHECKED FROM {0}.methodtask task LEFT JOIN (SELECT * FROM {0}.teamsdstate WHERE Category = 2 AND oppId = ?) task_stat ON task.idKey = task_stat.idItem order by task.idParent, task.sequenceNumber

SQL_NEW_ACTIVITY_TASK=INSERT INTO {0}.teamsdstate(uid, oppID, category, idItem, viaCheckBox, rtNotes, startDate, completeDate, last_Updated, byWhom, notes) VALUE(?,?,?,?,?,?,now(),?,now(),?, "")
SQL_EDIT_ACTIVITY_TASK=UPDATE {0}.teamsdstate SET viaCheckBox=?, rtNotes=?, completeDate=?, last_Updated=now() WHERE idKey=?
SQL_EDIT_ACTIVITY_TASK_WITHOUT_NOTES=UPDATE {0}.teamsdstate SET viaCheckBox=?, completeDate=?, last_Updated=now() WHERE idKey=?

SQL_GET_COMM_TASKS=SELECT * FROM {0}.methodtask task WHERE task.idParent = ? 
SQL_GET_USER_TASKS=SELECT * FROM {0}.teamsdstate state WHERE state.Category = 2 AND state.uid = :uid AND state.oppID = :oid AND state.idItem IN (:idItems)
SQL_GET_USER_COMPLETED_TASKS=SELECT * FROM {0}.teamsdstate state WHERE state.Category = 2 AND state.uid = :uid AND state.viaCheckBox = 1 AND state.oppID = :oid AND state.idItem IN (:idItems)
SQL_GET_ACTIVITY_BY_TASK=SELECT * FROM {0}.teamsdstate WHERE oppID = ? AND uid = ? AND Category = 1 AND (idItem = ? OR idItem IS NULL)
#SQL_GET_CLIENT_OPP=SELECT coll.CID, coll.OID, coll.CNM, coll.ONM, coll.ODP, coll.LU, coll.LastUpdated, IF(max(coll.U) IS NULL, '0', max(coll.U)) AS U, IF(max(coll.E) IS NULL, '0', max(coll.E)) AS E, IF(max(coll.D) IS NULL, '0', max(coll.D)) AS D, IF(max(coll.I) IS NULL, '0', max(coll.I)) AS I, IF(max(coll.CV) IS NULL, '0', max(coll.CV)) AS CV FROM(SELECT clients.idKey AS CID, opp.idKey AS OID, clients.Name AS CNM, opp.oppName AS ONM, opp.Description AS ODP, opp.last_Updated AS LastUpdated, UCASE(DATE_FORMAT(opp.last_Updated, "%e%b%Y")) AS LU, state.idItem AS IdItem, state.viaCheckBox AS viaCheckBox, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 5 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 5 AND state.viaCheckBox = 1 THEN 2 END U, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 6 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 6 AND state.viaCheckBox = 1 THEN 2 END E, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 7 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 7 AND state.viaCheckBox = 1 THEN 2 END D, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 8 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 8 AND state.viaCheckBox = 1 THEN 2 END I, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 9 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 9 AND state.viaCheckBox = 1 THEN 2 END CV FROM {0}.teamsd_opp opp LEFT JOIN {0}.teamsdclients clients ON opp.idClient = clients.idKey LEFT JOIN {0}.teamsdstate state ON state.oppID = opp.idKey AND state.Category = 1 WHERE opp.active = 1 AND opp.uid = ? AND opp.idKey = ?) coll GROUP BY coll.OID ORDER BY coll.LastUpdated DESC

SQL_GET_OPP_SALES_CONN=SELECT OPP.IDKEY AS OID FROM {0}.TEAMSDCLIENTS CLIENTS LEFT JOIN {0}.TEAMSD_OPP OPP ON CLIENTS.IDKEY = OPP.IDCLIENT WHERE OPP.IDSALESCONNECT = ? AND OPP.UID = ?
SQL_GET_OPP_DETAIL_BY_ID=SELECT idKey, rtNotes AS notes FROM {0}.teamsdstate WHERE idKey = ?

#UPDATE SQL FOR SHARE OPPS
SQL_GET_OPP_FIELDS = coll.CID, coll.OID, coll.CNM, coll.CIDENTIFIER, coll.LOCATION, coll.ONM, coll.ODP, coll.salesID, coll.LU, coll.LastUpdated, IF(max(coll.U) IS NULL, '0', max(coll.U)) AS U, IF(max(coll.E) IS NULL, '0', max(coll.E)) AS E, IF(max(coll.D) IS NULL, '0', max(coll.D)) AS D, IF(max(coll.I) IS NULL, '0', max(coll.I)) AS I, IF(max(coll.CV) IS NULL, '0', max(coll.CV)) AS CV, CASE WHEN coll.uid <> ? THEN 2 WHEN EXISTS(SELECT 1 FROM {0}.teamsd_opp_share shr WHERE shr.oppId = coll.oid) THEN 1 ELSE 0 END AS SHR, coll.uid, coll.active
SQL_GET_OPP_STATES = SELECT clients.idKey AS CID, opp.idKey AS OID, clients.Name AS CNM, clients.client_identifier AS CIDENTIFIER, clients.location AS LOCATION, opp.oppName AS ONM, opp.Description AS ODP, opp.idSalesConnect as salesID, DATE_FORMAT(opp.last_Updated, "%Y-%m-%d") AS LastUpdated, UCASE(DATE_FORMAT(opp.last_Updated, "%e%b%Y")) AS LU, state.idItem AS IdItem, state.viaCheckBox AS viaCheckBox, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 5 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 5 AND state.viaCheckBox = 1 THEN 2 END U, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 6 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 6 AND state.viaCheckBox = 1 THEN 2 END E, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 7 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 7 AND state.viaCheckBox = 1 THEN 2 END D, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 8 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 8 AND state.viaCheckBox = 1 THEN 2 END I, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 9 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 9 AND state.viaCheckBox = 1 THEN 2 END CV, opp.uid, opp.active FROM {0}.teamsd_opp opp LEFT JOIN {0}.teamsdclients clients ON opp.idClient = clients.idKey LEFT JOIN {0}.teamsdstate state ON state.oppID = opp.idKey AND state.Category = 1 WHERE (opp.active = 1 or opp.active = 3)
SQL_GET_OPP_LIST=SELECT {0} FROM({1} AND (opp.uid = ? OR EXISTS(SELECT 1 FROM {2}.teamsd_opp_share shr WHERE shr.shared_with = ? AND shr.oppId = opp.idKey))) coll GROUP BY coll.OID ORDER BY coll.LastUpdated DESC
SQL_GET_OPP_ITEM=SELECT {0} FROM({1} AND opp.idKey = ?) coll GROUP BY coll.OID

#NEW SQL FOR SHARE OPPS
SQL_CHECK_SHAREDPERSON = SELECT CASE WHEN coll.uid = ? THEN 1 WHEN EXISTS(SELECT 1 FROM {0}.teamsd_opp_share shr WHERE shr.shared_with = ? AND shr.oppId = coll.idKey) THEN 2 ELSE 0 END AS SHR FROM {0}.teamsd_opp coll WHERE coll.idKey = ?
SQL_NEW_SHAREDWITH = INSERT INTO {0}.teamsd_opp_share (oppId, shared_with) VALUES (?, ?)
SQL_GET_SHAREDWITH = SELECT shared_with FROM {0}.teamsd_opp_share WHERE oppId = ?
SQL_GET_SHAREDBY = SELECT uid FROM {0}.teamsd_opp WHERE idKey = ?

#NEW SQL FOR GO DYNAMIC WITH SALES CONNECT
SQL_GET_ASSOCIATEDATE = SELECT t.idSalesConnect, DATE_FORMAT(MAX(t.associateDate), "%Y-%m-%d") AS associateDate, UCASE(DATE_FORMAT(MAX(t.associateDate), "%e%b%Y")) AS AD FROM {0}.teamsd_opp t WHERE t.associateDate IS NOT NULL AND t.uid = ? GROUP BY t.idSalesConnect
SQL_GET_MY_CLIENTOPPS = SELECT opp.idKey OID, clients.idKey CID, clients.Name CNM, opp.oppName ONM, opp.Description ODP FROM {0}.teamsd_opp opp INNER JOIN {0}.teamsdclients clients ON opp.idClient = clients.idKey WHERE opp.active = 1 AND opp.uid = ? ORDER BY opp.last_Updated DESC
SQL_ADD_SC_CLIENT = INSERT INTO {0}.teamsdclients(uid, Name, sc_account_id, byWhom, last_Updated, createDate, associateDate, Description) VALUES(?,?,?,?,now(),now(),now(),"")
SQL_ADD_SC_OPP = INSERT INTO {0}.teamsd_opp(uid, byWhom, idClient, idSalesConnect, oppName, startDate, last_Updated, associateDate, Description) VALUE(?,?,?,?,?,date(now()),now(),now(),"")
SQL_ASSOCIATE_SC_CLIENT = UPDATE {0}.teamsdclients SET Name=?, sc_account_id=?, associateDate=now(), last_Updated=now() WHERE idKey=?
SQL_ASSOCIATE_SC_OPP = UPDATE {0}.teamsd_opp SET oppName=?, idSalesConnect=?, associateDate=now(), last_Updated=now() WHERE idKey=?
SQL_ASSOCIATE_SC_ClIENTOPP = UPDATE {0}.teamsd_opp SET oppName=?, idSalesConnect=?, idClient=?, associateDate=now(), last_Updated=now() WHERE idKey=?
SQL_CHECK_CLIENT = SELECT idKey FROM {0}.teamsdclients WHERE uid = ? AND sc_account_id = ?
SQL_GET_OPP_LIST_ADDED=SELECT {0} FROM({1} AND opp.uid = ? AND opp.idKey BETWEEN ? AND ?) coll GROUP BY coll.OID ORDER BY coll.LastUpdated DESC

#NEW SQL FOR Guidance Questions in Task Notes Field
SQL_GET_GUIDANCE_QUESTIONS = SELECT a.idKey AS idAnswer, a.choice AS answerChoice, a.notes AS answerNotes, q.idKey AS idQuestion, q.sequenceNumber, q.questionType, q.question FROM {0}.methodquestions q LEFT JOIN (SELECT * FROM {0}.teamsdstate_answers WHERE idState = ?) a ON (q.idKey = a.idQuestion) WHERE q.idParent = ? ORDER BY q.sequenceNumber
SQL_ADD_GUIDANCE_ANSWERS = INSERT INTO {0}.teamsdstate_answers (idState, idQuestion, choice, notes) VALUES (?, ?, ?, ?)
SQL_EDIT_GUIDANCE_ANSWERS = UPDATE {0}.teamsdstate_answers SET choice = ?, notes = ? WHERE idKey = ?

#NEW SQL FOR DELETE AND ARCHIVE OPPS
SQL_DELETE_OPPS = UPDATE {0}.teamsd_opp SET active = 0, deleteDate = now() WHERE uid = ? and idKey = ? and active = 1
SQL_ARCHIVE_OPPS = UPDATE {0}.teamsd_opp SET active = 2, archiveDate = now() WHERE uid = ? and idKey = ? and active = 1
SQL_RETRIEVE_OPPS = UPDATE {0}.teamsd_opp SET active = 1, retrieveDate = now()  WHERE idKey in ({1}) and uid = ? and active = 2
SQL_GET_ARCHIVE_OPPS = SELECT opp.active AS ACTIVE, opp.archiveDate AS archiveDate, opp.deleteDate AS deleteDate, opp.retrieveDate AS retrieveDate, clients.idKey AS CID, opp.idKey AS OID, clients.Name AS CNM, opp.oppName AS ONM, opp.Description AS ODP, DATE_FORMAT(opp.last_Updated, "%Y-%m-%d") AS LastUpdated, opp.uid FROM {0}.teamsd_opp opp LEFT JOIN {0}.teamsdclients clients ON opp.idClient = clients.idKey WHERE opp.active = 2 and opp.uid=?
SQL_GET_ARCHIVE_OPPS_CNT = SELECT count(*) as archivedOppCnt FROM {0}.teamsd_opp opp LEFT JOIN {0}.teamsdclients clients ON opp.idClient = clients.idKey WHERE opp.active = 2 and opp.uid=?

#NEW SQL FOR TRANSFER OPPS
SQL_TRANSFER_OPPS = UPDATE {0}.teamsd_opp SET active = 3, transferDate = now(), transferType = ?, transferTouid = ? WHERE uid = ? and idKey = ? and active = 1
SQL_GET_ALL_TRANSFER_OPPS = SELECT clients.idKey AS CID, clients.Name AS CNM, clients.Description as CDP, opp.idKey AS OID, opp.oppName AS ONM, opp.Description AS ODP, opp.idSalesConnect, opp.uid as transferBy, opp.transferDate FROM {0}.teamsd_opp opp join {0}.teamsdclients clients ON opp.idClient = clients.idKey and opp.active = 3 and opp.transferTouid = ?
SQL_GET_ALL_TRANSFER_OPP_COUNT = SELECT count(distinct opp.idKey) as opp_count FROM {0}.teamsd_opp opp join {0}.teamsdclients clients ON opp.idClient = clients.idKey and opp.active = 3 and opp.transferTouid = ?
SQL_SET_OPP_ACTIVE = UPDATE {0}.teamsd_opp SET active = 1 WHERE idKey = ? and active = 3
SQL_ACCEPT_TRANSFER_OPP = UPDATE {0}.teamsd_opp SET active = 1, transferTouid = uid, uid = ?, idClient = ? WHERE transferTouid = ? and idKey = ? and active = 3
SQL_DELETE_OPP_SHARE = delete from {0}.teamsd_opp_share where oppId = ? and shared_with = ?
SQL_GET_TRANSFER_TYPE = select transferType, transferTouid from {0}.teamsd_opp where idKey = ?
SQL_UPDATE_TRANSFER_OPPS_STATUS = UPDATE {0}.teamsd_opp SET active = 1 WHERE TO_DAYS(NOW()) - TO_DAYS(transferDate) > 15 and (transferTouid = ? or uid = ?) and active = 3

#NEW SQL FOR Example Opportunity Tab
SQL_CHECK_EXAMPLEOPPS = select ((select count(*) as cnt from {0}.teamsd_opp_share where shared_with = ?) + (Select count(*) as cnt from {0}.teamsd_opp where uid = ? and active in (1,3))) as cnt from dual
SQL_NEW_GET_EXAMPLECLIENTOPP=SELECT CLIENTS.IDKEY AS CID, OPP.IDKEY AS OID, CLIENTS.NAME AS CNM, CLIENTS.DESCRIPTION AS CNN, OPP.IDSALESCONNECT AS OPPID, OPP.OPPNAME AS OPPDESP, OPP.DESCRIPTION AS OPPCMT FROM {0}.TEAMSDCLIENTS CLIENTS LEFT JOIN {0}.TEAMSD_OPP OPP ON CLIENTS.IDKEY = OPP.IDCLIENT WHERE OPP.IDKEY = ?

SQL_GET_EXAMPLE_OPP_FIELDS = coll.CID, coll.OID, coll.CNM, coll.ONM, coll.ODP, coll.salesID, coll.LU, coll.LastUpdated, IF(max(coll.U) IS NULL, '0', max(coll.U)) AS U, IF(max(coll.E) IS NULL, '0', max(coll.E)) AS E, IF(max(coll.D) IS NULL, '0', max(coll.D)) AS D, IF(max(coll.I) IS NULL, '0', max(coll.I)) AS I, IF(max(coll.CV) IS NULL, '0', max(coll.CV)) AS CV, coll.uid, coll.active
SQL_GET_EXAMPLE_OPP_STATES = SELECT clients.idKey AS CID, opp.idKey AS OID, clients.Name AS CNM, opp.oppName AS ONM, opp.Description AS ODP, opp.idSalesConnect as salesID, DATE_FORMAT(opp.last_Updated, "%Y-%m-%d") AS LastUpdated, UCASE(DATE_FORMAT(opp.last_Updated, "%e%b%Y")) AS LU, state.idItem AS IdItem, state.viaCheckBox AS viaCheckBox, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 5 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 5 AND state.viaCheckBox = 1 THEN 2 END U, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 6 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 6 AND state.viaCheckBox = 1 THEN 2 END E, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 7 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 7 AND state.viaCheckBox = 1 THEN 2 END D, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 8 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 8 AND state.viaCheckBox = 1 THEN 2 END I, CASE WHEN state.idItem IS NULL THEN 0 WHEN state.idItem = 9 AND state.viaCheckBox = 0 THEN 1 WHEN state.idItem = 9 AND state.viaCheckBox = 1 THEN 2 END CV, opp.uid, opp.active FROM {0}.teamsd_opp opp LEFT JOIN {0}.teamsdclients clients ON opp.idClient = clients.idKey LEFT JOIN {0}.teamsdstate state ON state.oppID = opp.idKey AND state.Category = 1 WHERE opp.uid="example@xx.ibm.com" and (opp.active = 1 or opp.active = 3)
SQL_GET_EXAMPLE_OPP_ITEM=SELECT {0} FROM({1} AND opp.idKey = ?) coll GROUP BY coll.OID

SQL_GET_EXAMPLE_ACTIVITIES=SELECT activity.idKey AS AID, activity_stat.oppID AS OID, activity.Name AS ANM, activity.Purpose AS APP, activity.contentURL AS AURL, "" AS ADP, UCASE(DATE_FORMAT(activity_stat.startDate, "%e%b%Y")) AS ASD, UCASE(DATE_FORMAT(activity_stat.last_Updated, "%e%b%Y")) AS ALU, activity_stat.idKey AS SID, CASE WHEN activity_stat.idKey IS NULL THEN 0 WHEN activity_stat.idKey IS NOT NULL AND activity_stat.viaCheckBox = 0 THEN 1 WHEN activity_stat.idKey IS NOT NULL AND activity_stat.viaCheckBox = 1 THEN 2 END CHECKED FROM (SELECT * FROM {0}.methodcontent WHERE idParent != 0 AND idMethod = 1) activity LEFT JOIN (SELECT * FROM {0}.teamsdstate WHERE Category = 1 AND oppId = ?) activity_stat ON activity.idKey = activity_stat.idItem
SQL_GET_EXAMPLE_TASKS=SELECT task.idKey AS TID, task_stat.oppID AS OID, task.idParent AS PID, task.Name AS TNM, task.URL AS TURL, "" AS TDP, task_stat.idKey AS SID, CASE WHEN task_stat.idKey IS NULL THEN 0 WHEN task_stat.idKey IS NOT NULL AND task_stat.viaCheckBox = 0 THEN 1 WHEN task_stat.idKey IS NOT NULL AND task_stat.viaCheckBox = 1 THEN 2 END CHECKED FROM {0}.methodtask task LEFT JOIN (SELECT * FROM {0}.teamsdstate WHERE Category = 2 AND oppId = ?) task_stat ON task.idKey = task_stat.idItem order by task.idParent, task.sequenceNumber

SQL_GET_EXAMPLE_ATNOTES_BY_ID=SELECT idKey, rtNotes AS notes FROM {0}.teamsdstate WHERE idKey = ?

SQL_GET_EXAMPLE_GUIDANCE_QUESTIONS = SELECT a.idKey AS idAnswer, a.choice AS answerChoice, a.notes AS answerNotes, q.idKey AS idQuestion, q.sequenceNumber, q.questionType, q.question FROM {0}.methodquestions q LEFT JOIN (SELECT * FROM {0}.teamsdstate_answers WHERE idState = ?) a ON (q.idKey = a.idQuestion) WHERE q.idParent = ? ORDER BY q.sequenceNumber

