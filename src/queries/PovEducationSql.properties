# query education state information
SQL_GET_POV_MODULE_LIST = SELECT t.idKey AS idModule, t.title, t.content, GROUP_CONCAT(CONCAT("\\"", c.idKey, "\\"", ":", IFNULL(n.idKey, "null"))) AS topicStates, (CASE AVG(IFNULL(n.status, 0)) WHEN 0 THEN 0 WHEN 2 THEN 2 ELSE 1 END) AS status, UCASE(DATE_FORMAT(MIN(n.startDate), "%e%b%Y")) AS startDate, UCASE(DATE_FORMAT(MAX(n.lastUpdated), "%e%b%Y")) AS lastUpdated, date_format(MAX(n.lastUpdated),"%Y-%m-%d") AS LU FROM {0}.pov_education t INNER JOIN {0}.pov_education c ON (t.idKey = c.idParent) LEFT JOIN {0}.pov_education_notes n ON (c.idKey = n.idTopic AND n.idUser = ?) WHERE t.level = 1 GROUP BY t.idKey ORDER BY t.sequenceNumber
SQL_GET_POV_TOPIC_LIST = SELECT t.idKey AS idTopic, n.idKey AS idState, t.title, IFNULL(n.status, 0) AS status FROM {0}.pov_education t LEFT JOIN {0}.pov_education_notes n ON (t.idKey = n.idTopic AND n.idUser = ?) WHERE t.level = 2 AND t.idParent = ? ORDER BY t.sequenceNumber
SQL_GET_POV_NOTES = SELECT n.rtNotes FROM {0}.pov_education_notes n WHERE n.idKey = ?
SQL_GET_POV_RESOURCE_LIST = SELECT r.idKey AS idResource, r.title, r.content FROM {0}.pov_education r WHERE r.level = 3 AND r.idParent = ? ORDER BY r.sequenceNumber
SQL_GET_POV_RESOURCE_CONTENT = SELECT r.content FROM {0}.pov_education r WHERE r.level = 3 AND r.idKey = ?

# edit education state information
SQL_GET_MODULE_STATE = SELECT GROUP_CONCAT(CONCAT("\\"", c.idKey, "\\"", ":", IFNULL(n.idKey, "null"))) AS topicStates, (CASE AVG(IFNULL(n.status, 0)) WHEN 0 THEN 0 WHEN 2 THEN 2 ELSE 1 END) AS status, UCASE(DATE_FORMAT(MIN(n.startDate), "%e%b%Y")) AS startDate, UCASE(DATE_FORMAT(MAX(n.lastUpdated), "%e%b%Y")) AS lastUpdated, date_format(MAX(n.lastUpdated),"%Y-%m-%d") AS LU FROM {0}.pov_education c LEFT JOIN {0}.pov_education_notes n ON (c.idKey = n.idTopic AND n.idUser = ?) WHERE c.level = 2 AND c.idParent = ?
SQL_ADD_TOPIC_CHECKED = INSERT INTO {0}.pov_education_notes(idUser, idTopic, status, startDate, completeDate) values (?, ?, 2, NOW(), NOW())
SQL_EDIT_TOPIC_CHECKED = UPDATE {0}.pov_education_notes n SET n.status = 2, n.completeDate = IF(n.completeDate IS NULL, NOW(), n.completeDate) WHERE n.idKey = ?
SQL_EDIT_TOPIC_UNCHECK = UPDATE {0}.pov_education_notes n SET n.status = 1, n.completeDate = NULL WHERE n.idKey = ?
SQL_ADD_TOPIC_NOTES = INSERT INTO {0}.pov_education_notes(idUser, idTopic, rtNotes, status, startDate, completeDate) values (?, ?, ?, ?, NOW(), IF(2=?, NOW(), NULL))
SQL_EDIT_TOPIC_NOTES = UPDATE {0}.pov_education_notes n SET n.rtNotes = ?, n.status = IF(n.status < ?, ?, n.status), n.completeDate = IF(2=? AND n.completeDate IS NULL, NOW(), n.completeDate) WHERE n.idKey = ?

# education for view all notes
#SQL_GET_POV_VIEW_ALL_NOTES = SELECT e.idParent AS idModule, (SELECT m.title FROM {0}.pov_education m WHERE m.idKey = e.idParent) AS moduleTitle, e.idKey AS idTopic, e.title AS topicTitle, IFNULL((SELECT n.rtNotes FROM {0}.pov_education_notes n WHERE n.idTopic=e.idKey AND n.idUser = ?), "") AS rtNotes FROM {0}.pov_education e WHERE e.level = 2 AND e.idParent = 1 ORDER BY e.idParent, e.sequenceNumber
SQL_GET_ALL_IDTOPIC =  SELECT p.idTopic as idTopic FROM {0}.pov_education_notes p WHERE p.idUser=? ORDER BY p.idTopic
SQL_GET_POV_VIEW_ALL_NOTES = SELECT e.idParent AS idModule, (SELECT m.title FROM {0}.pov_education m WHERE m.idKey = e.idParent) AS moduleTitle, e.idKey AS idTopic, e.title AS topicTitle,  IFNULL(n.rtNotes, "") AS rtNotes FROM  {0}.pov_education e, {0}.pov_education_notes n WHERE e.idKey = n.idTopic  AND e.level = 2 AND n.idUser = ? AND n.idTopic = ?

SQL_GET_ALL_ACTIVITY =  SELECT c.idKey,1 as category,CONCAT(c.idKey-4,". Activity ",c.idKey-4," - ",c.Name) AS Name,s.rtNotes, "ACT" AS type FROM {0}.methodcontent c left join {0}.teamsdstate s on s.oppID=? and s.category=1 and s.idItem=c.idKey where c.idParent !=0 order by c.idParent ,c.sequenceNumber
SQL_GET_EG_VIEW_ALL_NOTES = SELECT t.idKey, 2 as category,t.Name,s.rtNotes, s.idKey AS type FROM {0}.methodtask t  left join {0}.teamsdstate s on s.oppID=? and s.category=2 and s.idItem=t.idKey where t.idParent =? order by t.sequenceNumber
SQL_GET_EG_NOTES_SUB = SELECT c.name, o.idSalesConnect, o.oppName, o.Description from {0}.teamsd_opp o, {0}.teamsdclients c where o.idkey=? and o.idclient=c.idkey
SQL_GET_EG_NOTES_QA = SELECT "0" AS idKey, concat(q.sequenceNumber,". ",q.question) AS Name, a.choice AS category, a.notes AS rtNotes, "QA" AS type  FROM {0}.methodquestions q left join {0}.teamsdstate_answers a on q.idkey=a.idQuestion and  a.idState=? where q.idParent=? order by q.sequenceNumber