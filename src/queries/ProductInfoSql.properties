SQL_INSERT_REDBOOKS = INSERT INTO {0}.redbooks (Category, FormNumber, DocType, Security, ISBN, Title, Authors, Abstract, TOC, PubDate, LastUpdate, PageCount, GrowthPlays, SubCat, PDFURL, PDFSize, URL, ISBN13) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SQL_DELETE_REDBOOKS = DELETE FROM {0}.redbooks

SQL_QUERY_SOURCE_fILTER=select source,count(idEntity) num from  (select distinct source, idEntity  FROM (select * from  {0} {1} {2} ) as uu ) as dd group by source
SQL_QUERY_SOURCE_TECLINE_fILTER=select source,count(idEntity) num from  (select distinct source, idEntity  FROM (select * from  {0} {1} ) as uu ) as dd group by source
SQL_QUERY_SOURCE_REDBOOK_fILTER=select source,count(idEntity) num from  (select distinct source, idEntity  FROM (select * from  {0} {1} ) as uu ) as dd group by source

SQL_FILTER_BASIC_TECHLINE_DATA=(SELECT r.revisionId as idEntity, r.question as name, date(r.modifiedDate) as lastUpdate, a.answerBody as description,null as description1,'2' as source,null as growthPlays,b.brandText as brand,r.faqId as FormNumber, null as DocType,null as Security FROM  {0}.revision r LEFT JOIN {0}.answer a on r.answerId=a.answerId INNER JOIN {0}.faq  f on r.faqId=f.faqId INNER JOIN {0}.faqBrand fb on f.faqId=fb.faqId INNER JOIN {0}.brand b on fb.brandId=b.brandId INNER JOIN {1}.brandfilter bf ON bf.brand=b.brandText where r.revisionStatus=3 
SQL_FILTER_BASIC_REDBOOK_DATA= UNION ALL select red.idKey as idEntity,red.Title as name, date(IF(red.LastUpdate IS NULL,red.PubDate, red.LastUpdate)) as lastUpdate,red.Abstract as description,red.TOC as description1,'1' as source ,red.GrowthPlays as growthPlays,red.Category as brand,red.FormNumber ,red.DocType ,red.Security from {0}.redbooks  red INNER JOIN {1}.brandfilter bf ON bf.brand=red.Category) as ss
SQL_FILTER_PRODUCTION_BASIC_TECHLINE_DATA=(SELECT r.revisionId as idEntity, r.question as name, date(r.modifiedDate) as lastUpdate, a.answerBody as description,null as description1,'2' as source,null as growthPlays,b.brandText as brand,r.faqId as FormNumber, null as DocType,null as Security FROM  {0}.revision r LEFT JOIN {0}.answer a on r.answerId=a.answerId INNER JOIN {0}.faq  f on r.faqId=f.faqId INNER JOIN {0}.faqBrand fb on f.faqId=fb.faqId INNER JOIN {0}.brand b on fb.brandId=b.brandId INNER JOIN {0}.brandfilter bf ON bf.brand=b.brandText where r.revisionStatus=3  ) as ss
SQL_FILTER_PRODUCTION_BASIC_TECHLINE_DATA_SHORT=(SELECT r.revisionId as idEntity, '2' as source, b.brandText as brand FROM  {0}.revision r LEFT JOIN {0}.answer a on r.answerId=a.answerId INNER JOIN {0}.faq  f on r.faqId=f.faqId INNER JOIN {0}.faqBrand fb on f.faqId=fb.faqId INNER JOIN {0}.brand b on fb.brandId=b.brandId INNER JOIN {0}.brandfilter bf ON bf.brand=b.brandText where r.revisionStatus=3  ) as ss
SQL_FILTER_PRODUCTION_BASIC_REDBOOK_DATA= (select red.idKey as idEntity,red.Title as name, date(IF(red.LastUpdate IS NULL,red.PubDate, red.LastUpdate)) as lastUpdate,red.Abstract as description,red.TOC as description1,'1' as source ,red.GrowthPlays as growthPlays,red.Category as brand,red.FormNumber ,red.DocType ,red.Security from {0}.redbooks  red INNER JOIN {1}.brandfilter bf ON bf.brand=red.Category) as ss

SQL_QUERY_DATE_fILTER=select SUM(MONTH1) MONTH1,SUM(MONTH2) MONTH2,SUM(MONTH3) MONTH3,SUM(MONTH4) MONTH4,SUM(MONTH5) MONTH5,SUM(MONTH6) MONTH6 from (select 	case WHEN DATE_SUB(NOW(),INTERVAL 1 MONTH) <=date(lastUpdate)  THEN  1 else 0  END MONTH1, case	WHEN DATE_SUB(NOW(),INTERVAL 3 MONTH) <=date(lastUpdate) THEN 1 else 0  END MONTH2,case	WHEN DATE_SUB(NOW(),INTERVAL 6 MONTH) <=date(lastUpdate) THEN 1 else 0 END MONTH3,case	WHEN DATE_SUB(NOW(),INTERVAL 1 YEAR) <=date(lastUpdate) THEN 1 else 0 END MONTH4,case	WHEN DATE_SUB(NOW(),INTERVAL 5 YEAR) <=date(lastUpdate) THEN 1 else 0 END MONTH5,case	WHEN DATE_SUB(NOW(),INTERVAL 5 YEAR) >date(lastUpdate) THEN 1 else 0 END MONTH6 FROM (SELECT distinct source, idEntity ,lastUpdate  FROM   {0}  {1}  {2}  )  as uu ) as dd 
SQL_QUERY_DATE_TECLINE_fILTER=select SUM(MONTH1) MONTH1,SUM(MONTH2) MONTH2,SUM(MONTH3) MONTH3,SUM(MONTH4) MONTH4,SUM(MONTH5) MONTH5,SUM(MONTH6) MONTH6 from (select 	case WHEN DATE_SUB(NOW(),INTERVAL 1 MONTH) <=date(lastUpdate)  THEN  1 else 0  END MONTH1, case	WHEN DATE_SUB(NOW(),INTERVAL 3 MONTH) <=date(lastUpdate) THEN 1 else 0  END MONTH2,case	WHEN DATE_SUB(NOW(),INTERVAL 6 MONTH) <=date(lastUpdate) THEN 1 else 0 END MONTH3,case	WHEN DATE_SUB(NOW(),INTERVAL 1 YEAR) <=date(lastUpdate) THEN 1 else 0 END MONTH4,case	WHEN DATE_SUB(NOW(),INTERVAL 5 YEAR) <=date(lastUpdate) THEN 1 else 0 END MONTH5,case	WHEN DATE_SUB(NOW(),INTERVAL 5 YEAR) >date(lastUpdate) THEN 1 else 0 END MONTH6 FROM (SELECT distinct source, idEntity ,lastUpdate  FROM   {0}  {1} )  as uu ) as dd
SQL_QUERY_DATE_REDBOOK_fILTER=select SUM(MONTH1) MONTH1,SUM(MONTH2) MONTH2,SUM(MONTH3) MONTH3,SUM(MONTH4) MONTH4,SUM(MONTH5) MONTH5,SUM(MONTH6) MONTH6 from (select 	case WHEN DATE_SUB(NOW(),INTERVAL 1 MONTH) <=date(lastUpdate)  THEN  1 else 0  END MONTH1, case	WHEN DATE_SUB(NOW(),INTERVAL 3 MONTH) <=date(lastUpdate) THEN 1 else 0  END MONTH2,case	WHEN DATE_SUB(NOW(),INTERVAL 6 MONTH) <=date(lastUpdate) THEN 1 else 0 END MONTH3,case	WHEN DATE_SUB(NOW(),INTERVAL 1 YEAR) <=date(lastUpdate) THEN 1 else 0 END MONTH4,case	WHEN DATE_SUB(NOW(),INTERVAL 5 YEAR) <=date(lastUpdate) THEN 1 else 0 END MONTH5,case	WHEN DATE_SUB(NOW(),INTERVAL 5 YEAR) >date(lastUpdate) THEN 1 else 0 END MONTH6 FROM (SELECT distinct source, idEntity ,lastUpdate  FROM   {0}  {1} )  as uu ) as dd

SQL_QUERY_BRAND_fILTER=SELECT oo.brand, oo.brand name, IFNULL(tt.num,0) num FROM {3}.brandfilter AS oo LEFT JOIN  ( SELECT brand, COUNT(idEntity) num,source FROM  (SELECT * FROM {0} {1} {2}  ) AS uu  GROUP BY brand  ) tt ON oo.brand=tt.brand ORDER BY oo.brand ASC
SQL_QUERY_BRAND_TECLINE_fILTER=SELECT oo.brand, oo.brand name, IFNULL(tt.num,0) num FROM {2}.brandfilter AS oo LEFT JOIN  ( SELECT brand, COUNT(idEntity) num,source FROM  (SELECT * FROM {0} {1}) AS uu  GROUP BY brand  ) tt ON oo.brand=tt.brand ORDER BY oo.brand ASC
SQL_QUERY_BRAND_REDBOOK_fILTER=SELECT oo.brand, oo.brand name, IFNULL(tt.num,0) num FROM {2}.brandfilter AS oo LEFT JOIN  ( SELECT brand, COUNT(idEntity) num,source FROM  (SELECT * FROM {0} {1}) AS uu  GROUP BY brand  ) tt ON oo.brand=tt.brand ORDER BY oo.brand ASC

SQL_QUERY_ALL_fILTER=SELECT COUNT(DISTINCT uu.source,uu.idEntity) AS total FROM (SELECT *  FROM (SELECT r.revisionId as idEntity,'2' as source,r.question as name,a.answerBody as description,null as description1,r.modifiedDate as lastUpdate,null as growthPlays,b.brandText brand FROM  {0}.revision r LEFT JOIN {0}.answer a on r.answerId=a.answerId  INNER JOIN {0}.faq  f on r.faqId=f.faqId INNER JOIN {0}.faqbrand fb on f.faqId=fb.faqId INNER JOIN {0}.brand b on fb.brandId=b.brandId INNER JOIN {3}.brandfilter bf ON bf.brand=b.brandText where r.revisionStatus=3 union all select red.idKey as idEntity,'1' as source,red.Title as name,red.Abstract as description,red.TOC as description1,IF(red.LastUpdate IS NULL,red.PubDate, red.LastUpdate) as lastUpdate,red.GrowthPlays as growthPlays,red.Category brand from {1}.redbooks  red INNER JOIN {3}.brandfilter bf ON bf.brand=red.Category ) as ss  {2} ) uu

SQL_NAME_CONDITION=( (name RLIKE ? ) or (description RLIKE ? ) or  (description1 RLIKE ? ) or  (ss.brand RLIKE ? ))
SQL_BRAND_CONDITION=brand=? 
SQL_GROWTHPLAYS_CONDITION=UPPER(growthPlays) in ({0})
SQL_SOURCE_CONDITION=source=?
SQL_RESULTS_BRAND_CONDITION=find_in_set(?,ss.brand)
SQL_RESULTS_SOURCE_CONDITION=ss.source=?

SQL_SORT_BY_ALPHABET= order by ss.name {0}  
SQL_SORT_BY_DATE=order by ss.lastUpdate {0}, ss.name 
SQL_SORT_BY_SOURCE=order by ss.source {0}, ss.name 
SQL_SORT_BY_RESCOUNT=order by revs.resCount {0}, ss.name 

SQL_LIMIT_RESCOUNT=limit ?,?

SQL_QUERY_PRODUCTION_RESULTS=select ss.idEntity,ss.name,date_format(ss.lastUpdate,"%d %M %Y") lastUpdate,ss.description,ss.description1,ss.source,CASE WHEN UPPER(GrowthPlays)="SOCIAL" THEN "Y" ELSE "N" END social,CASE WHEN UPPER(GrowthPlays)="CLOUD" THEN "Y" ELSE "N" END cloud,CASE WHEN UPPER(GrowthPlays)="MOBILE" THEN "Y" ELSE "N" END mobile,CASE WHEN UPPER(GrowthPlays)="SECURITY" THEN "Y" ELSE "N" END  security,CASE WHEN UPPER(GrowthPlays)="ANALYTICS" THEN "Y" ELSE "N" END analytics ,ss.brand,ss.DocType,ss.Security as confidential,ss.url,ss.pdfSize,ss.FormNumber,revs.satrs,revs.resCount,IF(ee.idKey IS NULL,0,1) isReviewed ,IF(u.idKey IS NULL,"N","Y") isUseful from  {0} {1} 
SQL_QUERY_PRODUCTION_LEFT_REVIEW=left join (select idEntity, entityType, ROUND(avg(stars)) satrs,count(1) resCount from {0}.review  group by idEntity, entityType ) revs on (ss.FormNumber=revs.idEntity AND ss.source=revs.entityType) left join {0}.review ee on (ss.FormNumber=ee.idEntity AND ss.source=ee.entityType AND ee.idUser=?) left join {0}.usefuldocs  u on (ss.FormNumber=u.idEntity AND ss.source=u.entityType AND u.idUser=?)  
SQL_QUERY_PRODUCTION_BASIC_DATE=(SELECT r.revisionId as idEntity, trim(trim('char(9)' from r.question)) as name, date(r.modifiedDate) as lastUpdate, a.answerBody as description, null as description1,'2' as source,null as growthPlays,br.brandText as brand,r.faqId as FormNumber, null as DocType,null as Security,null as url,null as pdfSize FROM  {0}.revision r LEFT JOIN {0}.answer a on r.answerId=a.answerId INNER JOIN (select f.faqId,GROUP_CONCAT(b.brandText) brandText from  {0}.faq f INNER JOIN  {0}.faqbrand fb  on f.faqId=fb.faqId  INNER JOIN {0}.brand b  on fb.brandId=b.brandId  INNER JOIN {2}.brandfilter bf ON bf.brand=b.brandText  group by f.faqId) br on r.faqId=br.faqId where r.revisionStatus=3 union all select red.idKey as idEntity,red.Title as name, date(IF(red.LastUpdate IS NULL,red.PubDate, red.LastUpdate)) as lastUpdate ,red.Abstract as description,red.TOC as description1,'1' as source ,red.GrowthPlays as growthPlays,red.Category as brand,red.FormNumber ,red.DocType ,red.Security,IF(red.PDFURL IS NULL,red.URL,red.PDFURL) url,red.PDFSize pdfSize from {1}.redbooks  red INNER JOIN {2}.brandfilter bf ON bf.brand=red.Category ) ss

SQL_QUERY_PRODUCTION_TECHLINE_LEFT_REVIEW=left join (select idEntity, entityType, ROUND(avg(stars)) satrs,count(1) resCount from {0}.review_soe  group by idEntity, entityType ) revs on (ss.idEntity=revs.idEntity AND ss.source=revs.entityType) left join {0}.review_soe ee on (ss.idEntity=ee.idEntity AND ss.source=ee.entityType AND ee.idUser=?) left join {0}.usefuldocs  u on (ss.idEntity=u.idEntity AND ss.source=u.entityType AND u.idUser=?)
SQL_QUERY_PRODUCTION_BASIC_TECHLINE_DATE=(SELECT r.revisionId as idEntity, trim(trim('char(9)' from r.question)) as name, date(r.modifiedDate) as lastUpdate, a.answerBody as description, null as description1,'2' as source,null as growthPlays,br.brandText as brand,r.faqId as FormNumber, null as DocType,null as Security,null as url,null as pdfSize FROM  {0}.revision r LEFT JOIN {0}.answer a on r.answerId=a.answerId INNER JOIN (select f.faqId,GROUP_CONCAT(b.brandText) brandText from  {0}.faq f INNER JOIN  {0}.faqBrand fb  on f.faqId=fb.faqId  INNER JOIN {0}.brand b  on fb.brandId=b.brandId  INNER JOIN {0}.brandfilter bf ON bf.brand=b.brandText  group by f.faqId) br on r.faqId=br.faqId where r.revisionStatus=3) ss
SQL_QUERY_PRODUCTION_BASIC_REDBOOK_DATE=(select red.idKey as idEntity,red.Title as name, date(IF(red.LastUpdate IS NULL,red.PubDate, red.LastUpdate)) as lastUpdate ,red.Abstract as description,red.TOC as description1,'1' as source ,red.GrowthPlays as growthPlays,red.Category as brand,red.FormNumber ,red.DocType ,red.Security,IF(red.PDFURL IS NULL,red.URL,red.PDFURL) url,red.PDFSize pdfSize from {0}.redbooks  red INNER JOIN {1}.brandfilter bf ON bf.brand=red.Category ) ss

SQL_INSERT_USEFUL=INSERT INTO {0}.usefuldocs(idEntity,entityType,idUser,CAMSS,KeyWords,Brand,Source,DateLastUpdated) VALUES(?,?,?,?,?,?,?,?)

SQL_DELETE_USEFUL=DELETE FROM {0}.usefuldocs WHERE idEntity=? AND entityType=? AND idUser=?