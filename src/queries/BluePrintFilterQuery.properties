SQL_GET_ALL_COUNT=SELECT COUNT(N.idOffering) AS CT FROM(SELECT OI.idKey AS idOffering FROM {0}.offering_with_industry OI INNER JOIN {0}.solution S ON S.idKey = OI.idISN LEFT JOIN {0}.buyer2offering BO ON BO.idISO = OI.idKey INNER JOIN {0}.industry IND ON OI.idInd = IND.idKey INNER JOIN {0}.solutionareas SA ON OI.idISA = SA.idKey WHERE (OI.offering_Name RLIKE ? OR IND.Name RLIKE ? OR SA.Imperative_Name RLIKE ? OR S.Name RLIKE ? OR OI.offering_Description RLIKE ? OR ? IS NULL) AND {1} GROUP BY OI.idKey) N

SQL_GET_INDUSTRIES=SELECT I.idKey AS ID, CONCAT(I.Name, " (", COUNT(distinct(OI.idKey)), ")") AS ITEM FROM {0}.industry I LEFT JOIN {0}.offering_with_industry OI ON I.idKey = OI.idInd INNER JOIN {0}.solution S ON S.idKey = OI.idISN LEFT JOIN {0}.buyer2offering BO ON BO.idISO = OI.idKey INNER JOIN {0}.solutionareas SA ON OI.idISA = SA.idKey WHERE (OI.offering_Name RLIKE ? OR I.Name RLIKE ? OR SA.Imperative_Name RLIKE ? OR S.Name RLIKE ? OR OI.offering_Description RLIKE ? OR ? IS NULL) AND {1} GROUP BY ID
SQL_GET_IMPERATIVES=SELECT I.idKey AS ID, CONCAT(I.Imperative_Name, " (", COUNT(distinct(OI.idKey)), ")") AS ITEM FROM {0}.solutionareas I LEFT JOIN {0}.offering_with_industry OI ON I.idKey = OI.idISA INNER JOIN {0}.solution S ON S.idKey = OI.idISN LEFT JOIN {0}.buyer2offering BO ON BO.idISO = OI.idKey INNER JOIN {0}.industry IND ON OI.idInd = IND.idKey WHERE (OI.offering_Name RLIKE ? OR IND.Name RLIKE ? OR I.Imperative_Name RLIKE ? OR S.Name RLIKE ? OR OI.offering_Description RLIKE ? OR ? IS NULL) AND {1} GROUP BY ID
SQL_GET_SOLUTIONS=SELECT S.idKey AS ID, CONCAT(S.Name, "(", COUNT(distinct(OI.idKey)), ")") AS ITEM FROM {0}.offering_with_industry OI INNER JOIN {0}.solution S ON S.idKey = OI.idISN LEFT JOIN {0}.buyer2offering BO ON BO.idISO = OI.idKey INNER JOIN {0}.industry IND ON OI.idInd = IND.idKey INNER JOIN {0}.solutionareas SA ON OI.idISA = SA.idKey WHERE (OI.offering_Name RLIKE ? OR IND.Name RLIKE ? OR SA.Imperative_Name RLIKE ? OR S.Name RLIKE ? OR OI.offering_Description RLIKE ? OR ? IS NULL) AND {1} GROUP BY ID
SQL_GET_OFFERINGS=SELECT OI.idKey AS ID, OI.offering_Name AS ITEM FROM {0}.offering_with_industry OI INNER JOIN {0}.solution S ON S.idKey = OI.idISN LEFT JOIN {0}.buyer2offering BO ON BO.idISO = OI.idKey INNER JOIN {0}.industry IND ON OI.idInd = IND.idKey INNER JOIN {0}.solutionareas SA ON OI.idISA = SA.idKey WHERE (OI.offering_Name RLIKE ? OR IND.Name RLIKE ? OR SA.Imperative_Name RLIKE ? OR S.Name RLIKE ? OR OI.offering_Description RLIKE ? OR ? IS NULL) AND {1} GROUP BY ID

SQL_GET_BUYERS=SELECT B.idKey AS ID, CONCAT(B.Name, "(", COUNT(OI.idKey), ")") AS ITEM, COUNT(OI.idKey) AS CT FROM {0}.offering_with_industry OI INNER JOIN {0}.solution S ON S.idKey = OI.idISN LEFT JOIN {0}.buyer2offering BO ON BO.idISO = OI.idKey INNER JOIN {0}.buyers B ON BO.idBuyer = B.idKey INNER JOIN {0}.industry IND ON OI.idInd = IND.idKey INNER JOIN {0}.solutionareas SA ON OI.idISA = SA.idKey WHERE (OI.offering_Name RLIKE ? OR IND.Name RLIKE ? OR SA.Imperative_Name RLIKE ? OR S.Name RLIKE ? OR OI.offering_Description RLIKE ? OR ? IS NULL) AND {1} GROUP BY ID ORDER BY CT DESC 
SQL_GET_GEO=SELECT geography.geographyValue, geography.geographyText,(case when geography.geographyValue = "WW" then offerringCount.ww_count when geography.geographyValue = "AP" then offerringCount.ap_count when geography.geographyValue = "EU" then offerringCount.eu_count when geography.geographyValue = "GCG" then offerringCount.gcg_count when geography.geographyValue = "JP" then offerringCount.jp_count when geography.geographyValue = "MEA" then offerringCount.mea_count when geography.geographyValue = "NA" then offerringCount.na_count when geography.geographyValue = "LA" then offerringCount.la_count else 0 end) AS isoCount FROM ( select 2 AS idKey, "WW" AS geographyValue, "World Wide" AS geographyText union all select 3 AS idKey, "AP" AS geographyValue, "Asia/Pacific" AS geographyText union all select 4 AS idKey, "EU" AS geographyValue, "Europe" AS geographyText union all select 5 AS idKey, "GCG" AS geographyValue, "Greater China Group" AS geographyText union all select 6 AS idKey, "JP" AS geographyValue, "Japan" AS geographyText union all select 7 AS idKey, "MEA" AS geographyValue, "Middle East and Africa" AS geographyText union all select 8 AS idKey, "NA" AS geographyValue, "North America" AS geographyText union all select 9 AS idKey, "LA" AS geographyValue, "South America" AS geographyText) AS geography, (select sum(if((IFNULL(isn.p_NA, 0)+IFNULL(isn.p_EU, 0)+IFNULL(isn.p_JP, 0)+IFNULL(isn.p_GCG, 0)+IFNULL(isn.p_LA, 0)+IFNULL(isn.p_AP, 0)+IFNULL(isn.p_MEA, 0)) >=3, 1, 0)) as ww_count, sum(IFNULL(isn.p_AP, 0)) as ap_count, sum(IFNULL(isn.p_EU, 0)) as eu_count, sum(IFNULL(isn.p_GCG, 0)) as gcg_count, sum(IFNULL(isn.p_JP, 0)) as jp_count, sum(IFNULL(isn.p_MEA, 0)) as mea_count, sum(IFNULL(isn.p_NA, 0)) as na_count, sum(IFNULL(isn.p_LA, 0)) as la_count from ( SELECT OI.idKey AS idKey, S.p_NA, S.p_EU, S.p_JP, S.p_GCG, S.p_LA, S.p_AP, S.p_MEA FROM {0}.offering_with_industry OI INNER JOIN {0}.solution S ON S.idKey = OI.idISN LEFT JOIN {0}.buyer2offering BO ON BO.idISO = OI.idKey INNER JOIN {0}.industry IND ON OI.idInd = IND.idKey INNER JOIN {0}.solutionareas SA ON OI.idISA = SA.idKey WHERE (OI.offering_Name RLIKE ? OR IND.Name RLIKE ? OR SA.Imperative_Name RLIKE ? OR S.Name RLIKE ? OR OI.offering_Description RLIKE ? OR ? IS NULL) AND {1} GROUP BY idKey ) isn ) AS offerringCount ORDER BY geography.idKey

SQL_WHERE_CLAUSE_1=(CONCAT( IF(OI.Cloud = "Y", "C", "0"), IF(OI.Analytics = "Y", "A", "0"), IF(OI.Mobile = "Y", "M", "0"), IF(OI.Social = "Y", "S", "0"), IF(OI.Security = "Y", "Z", "0")) RLIKE ? OR ? = "EMPTY") AND (OI.idInd = ? OR ? IS NULL) AND (OI.idISA = ? OR ? IS NULL) AND (OI.idISN = ? OR ? IS NULL) AND (OI.idKey = ? OR ? IS NULL) AND (BO.idBuyer = ? OR ? IS NULL) AND ((? = 0) OR (? = "WW" AND (IFNULL(S.p_NA, 0)+ IFNULL(S.p_EU, 0)+ IFNULL(S.p_JP, 0)+ IFNULL(S.p_GCG, 0)+ IFNULL(S.p_LA, 0)+ IFNULL(S.p_AP, 0)+ IFNULL(S.p_MEA, 0)) >=3) OR (? = "NA" AND S.p_NA=1) OR (? = "EU" AND S.p_EU=1) OR (? = "JP" AND S.p_JP=1) OR (? = "GCG" AND S.p_GCG=1) OR (? = "LA" AND S.p_LA=1) OR (? = "AP" AND S.p_AP=1) OR (? = "MEA" AND S.p_MEA=1))
